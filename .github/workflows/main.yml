# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "rewrite" branch
  push:
    branches: [ "rewrite" ]
  pull_request:
    branches: [ "rewrite" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.


name: Push on main branch

on:

  push:

    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab

  workflow_dispatch:

jobs:

  Release-Pipeline:

    # The type of runner that the job will run on

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:

      - uses: actions/checkout@v2

      - name: set up JDK 1.8

        uses: actions/setup-java@v1

        with:

          java-version: 1.8

      - name: Set Secret Properties

        env:

          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}

        run: echo "$LOCAL_PROPERTIES" > ./local.properties

      - name: Prepare release keystore

        run: |

          echo "${{ secrets.BASE_64_SIGNING_KEY }}" > signing_config.jks.asc

          gpg -d --passphrase "${{ secrets.BASE_64_SIGNING_KEY_PASSPHRASE }}" --batch signing_config.jks.asc > app/signing_config.jks

      - name: Build with Gradle

        env:

          VERSION_CODE: ${{ github.run_number }}

        run: ./gradlew build

      - name: Build release distribution

        env:

          VERSION_CODE: ${{ github.run_number }}

        run: ./gradlew assembleRelease

      - name: List files

        run: ls -lrt app/build/outputs/apk/release

      - name: Upload release artifact to Firebase App Distribution

        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1

        with:

          appId: ${{ secrets.FIREBASE_APP_ID }}

          token: ${{ secrets.FIREBASE_TOKEN }}

          groups: testers

          file: app/build/outputs/apk/release/app-release.apk

      - name: Build debug distribution

        env:

          VERSION_CODE: ${{ github.run_number }}

        run: ./gradlew assembleDebug

      - name: Upload debug artifact to Firebase App Distribution

        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1

        with:

          appId: ${{ secrets.FIREBASE_APP_ID_DEBUG }}

          token: ${{ secrets.FIREBASE_TOKEN }}

          groups: testers

          file: app/build/outputs/apk/debug/app-debug.apk

      - name: Notify Teams channel

        uses: skitionek/notify-microsoft-teams@master

        if: always()

        with:

          webhook_url: ${{ secrets.CHANNEL_WEBHOOK }}

          job: ${{ toJson(job) }}

          steps: ${{ toJson(steps) }}
